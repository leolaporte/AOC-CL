(undo-tree-save-format-version . 1)
"efc7d87b2c7d49e46a873b995b6a884d8846a7a9"
[nil nil nil nil (26032 25912 805269 825000) 0 nil]
([nil nil ((#("flow" 0 4 (fontified t)) . -8213) (undo-tree-id151 . -4) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 8217 (t 26032 24587 739435 296000)) nil (26032 25912 805268 933000) 0 nil])
([nil nil ((8213 . 8222)) nil (26032 25912 805266 892000) 0 nil])
([nil nil ((8213 . 8226) (#("get-flow-" 0 9 (fontified t)) . -8213) (undo-tree-id150 . -9) 8222) nil (26032 25912 805266 262000) 0 nil])
([nil nil ((8279 . 8280)) nil (26032 25912 805265 226000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -8275) (undo-tree-id145 . -1) (#("l" 0 1 (fontified t)) . -8276) (undo-tree-id146 . -1) (#("o" 0 1 (fontified t)) . -8277) (undo-tree-id147 . -1) (#("w" 0 1 (fontified t)) . -8278) (undo-tree-id148 . -1) (#("e" 0 1 (fontified t)) . -8279) (undo-tree-id149 . -1) 8280) nil (26032 25912 805263 981000) 0 nil])
([nil nil ((8275 . 8283)) nil (26032 25912 805257 667000) 0 nil])
([nil nil ((8275 . 8288) (#("get-flow" 0 8 (fontified t)) . -8275) (undo-tree-id144 . -8) 8283) nil (26032 25912 805257 91000) 0 nil])
([nil nil ((14670 . 14672)) nil (26032 25912 805256 58000) 0 nil])
([nil nil ((14672 . 14674)) nil (26032 25912 805255 743000) 0 nil])
([nil nil ((14673 . 14678)) nil (26032 25912 805255 355000) 0 nil])
([nil nil ((14678 . 14679)) nil (26032 25912 805254 980000) 0 nil])
([nil nil ((14679 . 14695)) nil (26032 25912 805254 655000) 0 nil])
([nil nil ((14695 . 14696)) nil (26032 25912 805254 275000) 0 nil])
([nil nil ((14696 . 14698)) nil (26032 25912 805253 873000) 0 nil])
([nil nil ((14697 . 14700)) nil (26032 25912 805253 504000) 0 nil])
([nil nil ((14701 . 14704)) nil (26032 25912 805253 133000) 0 nil])
([nil nil ((14704 . 14706)) nil (26032 25912 805252 731000) 0 nil])
([nil nil ((14705 . 14710)) nil (26032 25912 805252 416000) 0 nil])
([nil nil ((14710 . 14711)) nil (26032 25912 805252 44000) 0 nil])
([nil nil ((14711 . 14712)) nil (26032 25912 805251 658000) 0 nil])
([nil nil ((14712 . 14713)) nil (26032 25912 805251 270000) 0 nil])
([nil nil ((14713 . 14719)) nil (26032 25912 805250 903000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-doc-face fontified t)) . -14713) (undo-tree-id138 . -1) (#("r" 0 1 (face font-lock-doc-face fontified t)) . -14714) (undo-tree-id139 . -1) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -14715) (undo-tree-id140 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -14716) (undo-tree-id141 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -14717) (undo-tree-id142 . -1) (#("i" 0 1 (face font-lock-doc-face fontified t)) . -14718) (undo-tree-id143 . -1) 14719) nil (26032 25912 805249 880000) 0 nil])
([nil nil ((14713 . 14717)) nil (26032 25912 805245 456000) 0 nil])
([nil nil ((14717 . 14718)) nil (26032 25912 805245 112000) 0 nil])
([nil nil ((14718 . 14722)) nil (26032 25912 805244 598000) 0 nil])
([nil nil ((14722 . 14723)) nil (26032 25912 805244 83000) 0 nil])
([nil nil ((14723 . 14727)) nil (26032 25912 805243 760000) 0 nil])
([nil nil ((14727 . 14728)) nil (26032 25912 805243 69000) 0 nil])
([nil nil ((14728 . 14734)) nil (26032 25912 805242 744000) 0 nil])
([nil nil ((14734 . 14735)) nil (26032 25912 805242 436000) 0 nil])
([nil nil ((14735 . 14738)) nil (26032 25912 805242 51000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-doc-face fontified t)) . -14735) (undo-tree-id135 . -1) (#("r" 0 1 (face font-lock-doc-face fontified t)) . -14736) (undo-tree-id136 . -1) (#("i" 0 1 (face font-lock-doc-face fontified t)) . -14737) (undo-tree-id137 . -1) 14738) nil (26032 25912 805241 270000) 0 nil])
([nil nil ((14735 . 14740)) nil (26032 25912 805238 904000) 0 nil])
([nil nil ((14740 . 14741)) nil (26032 25912 805238 367000) 0 nil])
([nil nil ((14741 . 14743)) nil (26032 25912 805238 53000) 0 nil])
([nil nil ((14743 . 14744)) nil (26032 25912 805237 698000) 0 nil])
([nil nil ((14744 . 14747)) nil (26032 25912 805237 340000) 0 nil])
([nil nil ((14748 . 14751)) nil (26032 25912 805236 954000) 0 nil])
([nil nil ((14751 . 14753)) nil (26032 25912 805236 565000) 0 nil])
([nil nil ((14752 . 14756)) nil (26032 25912 805236 190000) 0 nil])
([nil nil ((14756 . 14757)) nil (26032 25912 805235 741000) 0 nil])
([nil nil ((14757 . 14759)) nil (26032 25912 805235 320000) 0 nil])
([nil nil ((14758 . 14761)) nil (26032 25912 805234 831000) 0 nil])
([nil nil ((14761 . 14762)) nil (26032 25912 805234 453000) 0 nil])
([nil nil ((14762 . 14764)) nil (26032 25912 805234 141000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -14763) (undo-tree-id134 . -1) 14764) nil (26032 25912 805233 682000) 0 nil])
([nil nil ((14763 . 14765)) nil (26032 25912 805232 720000) 0 nil])
([nil nil ((14765 . 14766)) nil (26032 25912 805232 244000) 0 nil])
([nil nil ((14766 . 14771)) nil (26032 25912 805231 661000) 0 nil])
([nil nil ((14771 . 14772)) nil (26032 25912 805231 235000) 0 nil])
([nil nil ((14772 . 14774)) nil (26032 25912 805230 864000) 0 nil])
([nil nil ((14773 . 14777)) nil (26032 25912 805230 451000) 0 nil])
([nil nil ((14777 . 14782)) nil (26032 25912 805230 89000) 0 nil])
([nil nil ((14773 . 14788) (#("array-dim" 0 9 (fontified t)) . -14773) (undo-tree-id133 . -9) 14782) nil (26032 25912 805229 573000) 0 nil])
([nil nil ((14788 . 14789)) nil (26032 25912 805228 584000) 0 nil])
([nil nil ((14789 . 14792)) nil (26032 25912 805228 227000) 0 nil])
([nil nil ((14792 . 14793)) nil (26032 25912 805227 851000) 0 nil])
([nil nil ((14793 . 14794)) nil (26032 25912 805227 469000) 0 nil])
([nil nil ((14796 . 14801)) nil (26032 25912 805227 103000) 0 nil])
([nil nil ((14801 . 14803)) nil (26032 25912 805226 777000) 0 nil])
([nil nil ((14802 . 14806)) nil (26032 25912 805226 375000) 0 nil])
([nil nil ((14806 . 14807)) nil (26032 25912 805225 995000) 0 nil])
([nil nil ((14807 . 14809)) nil (26032 25912 805225 170000) 0 nil])
([nil nil ((14808 . 14811)) nil (26032 25912 805224 699000) 0 nil])
([nil nil ((14811 . 14812)) nil (26032 25912 805224 290000) 0 nil])
([nil nil ((14812 . 14815)) nil (26032 25912 805223 949000) 0 nil])
([nil nil ((14815 . 14816)) nil (26032 25912 805223 312000) 0 nil])
([nil nil ((14816 . 14821)) nil (26032 25912 805222 946000) 0 nil])
([nil nil ((14821 . 14822)) nil (26032 25912 805222 576000) 0 nil])
([nil nil ((14822 . 14824)) nil (26032 25912 805222 194000) 0 nil])
([nil nil ((14823 . 14831)) nil (26032 25912 805221 822000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -14830) (undo-tree-id132 . -1) 14831) nil (26032 25912 805221 344000) 0 nil])
([nil nil ((14830 . 14833)) nil (26032 25912 805220 414000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -14831) (undo-tree-id130 . -1) (#("m" 0 1 (fontified t)) . -14832) (undo-tree-id131 . -1) 14833) nil (26032 25912 805219 819000) 0 nil])
([nil nil ((14831 . 14832)) nil (26032 25912 805218 200000) 0 nil])
([nil nil ((14823 . 14838) (#("array-dim" 0 9 (fontified t)) . -14823) (undo-tree-id129 . -9) 14832) nil (26032 25912 805217 267000) 0 nil])
([nil nil ((14838 . 14839)) nil (26032 25912 805216 168000) 0 nil])
([nil nil ((14839 . 14842)) nil (26032 25912 805215 665000) 0 nil])
([nil nil ((14842 . 14843)) nil (26032 25912 805215 355000) 0 nil])
([nil nil ((14843 . 14844)) nil (26032 25912 805215 35000) 0 nil])
([nil nil ((14846 . 14853)) nil (26032 25912 805214 661000) 0 nil])
([nil nil ((14796 . 14801)) nil (26032 25912 805214 289000) 0 nil])
([nil nil ((14801 . 14803)) nil (26032 25912 805213 876000) 0 nil])
([nil nil ((14802 . 14808)) nil (26032 25912 805213 499000) 0 nil])
([nil nil ((14808 . 14809)) nil (26032 25912 805213 194000) 0 nil])
([nil nil ((14809 . 14810)) nil (26032 25912 805212 865000) 0 nil])
([nil nil ((14810 . 14811)) nil (26032 25912 805212 542000) 0 nil])
([nil nil ((14811 . 14813)) nil (26032 25912 805212 176000) 0 nil])
([nil nil ((14812 . 14814)) nil (26032 25912 805211 792000) 0 nil])
([nil nil ((14816 . 14817)) nil (26032 25912 805211 429000) 0 nil])
([nil nil ((14817 . 14838)) nil (26032 25912 805211 45000) 0 nil])
([nil nil ((14838 . 14839)) nil (26032 25912 805210 655000) 0 nil])
([nil nil ((14839 . 14842)) nil (26032 25912 805210 164000) 0 nil])
([nil nil ((14842 . 14843)) nil (26032 25912 805209 679000) 0 nil])
([nil nil ((14843 . 14847)) nil (26032 25912 805209 179000) 0 nil])
([nil nil ((14897 . 14904)) nil (26032 25912 805208 677000) 0 nil])
([nil nil ((14904 . 14906)) nil (26032 25912 805208 261000) 0 nil])
([nil nil ((14905 . 14911)) nil (26032 25912 805207 773000) 0 nil])
([nil nil ((14911 . 14912)) nil (26032 25912 805207 348000) 0 nil])
([nil nil ((14912 . 14913)) nil (26032 25912 805206 824000) 0 nil])
([nil nil ((14913 . 14914)) nil (26032 25912 805206 441000) 0 nil])
([nil nil ((14914 . 14916)) nil (26032 25912 805206 65000) 0 nil])
([nil nil ((14915 . 14917)) nil (26032 25912 805205 682000) 0 nil])
([nil nil ((14918 . 14919)) nil (26032 25912 805205 182000) 0 nil])
([nil nil ((14919 . 14921)) nil (26032 25912 805204 802000) 0 nil])
([nil nil ((14920 . 14924)) nil (26032 25912 805204 410000) 0 nil])
([nil nil ((14924 . 14925)) nil (26032 25912 805204 12000) 0 nil])
([nil nil ((14925 . 14928)) nil (26032 25912 805203 548000) 0 nil])
([nil nil ((14928 . 14929)) nil (26032 25912 805203 108000) 0 nil])
([nil nil ((14929 . 14932)) nil (26032 25912 805202 736000) 0 nil])
([nil nil ((14932 . 14933)) nil (26032 25912 805202 346000) 0 nil])
([nil nil ((14933 . 14936)) nil (26032 25912 805201 602000) 0 nil])
([nil nil ((#("
      " 0 1 (fontified t) 1 7 (fontified t)) . 14938) (undo-tree-id125 . -7) (undo-tree-id126 . -7) (undo-tree-id127 . -7) (undo-tree-id128 . -7)) nil (26032 25912 805201 82000) 0 nil])
([nil nil ((14747 . 14748)) nil (26032 25912 805198 783000) 0 nil])
([nil nil ((14748 . 14749)) nil (26032 25912 805198 407000) 0 nil])
([nil nil ((14749 . 14752)) nil (26032 25912 805198 22000) 0 nil])
([nil nil ((14752 . 14753)) nil (26032 25912 805197 632000) 0 nil])
([nil nil ((14753 . 14759)) nil (26032 25912 805197 237000) 0 nil])
([nil nil ((14759 . 14760)) nil (26032 25912 805196 842000) 0 nil])
([nil nil ((14760 . 14773)) nil (26032 25912 805196 405000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-doc-face fontified t)) . -14769) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("i" 0 1 (face font-lock-doc-face fontified t)) . -14770) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("o" 0 1 (face font-lock-doc-face fontified t)) . -14771) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#("n" 0 1 (face font-lock-doc-face fontified t)) . -14772) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) 14773) nil (26032 25912 805194 517000) 0 nil])
([nil nil ((14769 . 14772)) nil (26032 25912 804494 486000) 0 nil])
([nil nil ((14772 . 14773)) nil (26032 25912 804494 108000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-doc-face fontified t)) . -14772) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 14773) nil (26032 25912 804493 442000) 0 nil])
([nil nil ((14772 . 14773)) nil (26032 25912 804490 64000) 0 nil])
([nil nil ((14752 . 14753)) nil (26032 25912 804489 738000) 0 nil])
([nil nil ((14753 . 14755)) nil (26032 25912 804489 169000) 0 nil])
([nil nil ((#("col" 0 3 (fontified t)) . -15227) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) 15230) nil (26032 25912 804488 491000) 0 nil])
([nil nil ((15227 . 15230)) nil (26032 25912 804481 390000) 0 nil])
([nil nil ((#("row" 0 3 (fontified t)) . -15286) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) 15289) nil (26032 25912 804480 698000) 0 nil])
([nil nil ((15286 . 15289)) nil (26032 25912 804476 471000) 0 nil])
([nil nil ((#("	      " 0 7 (fontified t)) . -15783) (undo-tree-id26 . 7) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -15783) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -15784) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 15785) nil (26032 25912 804474 587000) 0 nil])
([nil nil ((15780 . 15794) (#(" " 0 1 (fontified t)) . -15719) (undo-tree-id0 . 1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -15719) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -15720) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 15721) nil (26032 25912 804459 168000) 0 nil])
([nil nil ((#(";; The answer to AOC 2023 Day 10 Part 1 is 7030
;; Evaluation took:
;; 0.002 seconds of real time
;; 0.002301 seconds of total run time (0.002190 user, 0.000111 system)
;; 100.00% CPU
;; 487,472 bytes consed
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 48 (face font-lock-comment-face fontified t) 48 51 (face font-lock-comment-delimiter-face fontified t) 51 68 (face font-lock-comment-face fontified t) 68 71 (face font-lock-comment-delimiter-face fontified t) 71 98 (face font-lock-comment-face fontified t) 98 101 (face font-lock-comment-delimiter-face fontified t) 101 169 (face font-lock-comment-face fontified t) 169 172 (face font-lock-comment-delimiter-face fontified t) 172 184 (face font-lock-comment-face fontified t) 184 187 (face font-lock-comment-delimiter-face fontified t) 187 208 (face font-lock-comment-face fontified t)) . 16052) (undo-tree-id182 . -208) (undo-tree-id183 . -208) (undo-tree-id184 . -47) (undo-tree-id185 . -47) (undo-tree-id186 . -47) (undo-tree-id187 . -47) (undo-tree-id188 . -47) (undo-tree-id189 . -47) (undo-tree-id190 . -47) (undo-tree-id191 . -47) (undo-tree-id192 . -47) (undo-tree-id193 . -47) (undo-tree-id194 . -47) (undo-tree-id195 . -47) (undo-tree-id196 . -67) (undo-tree-id197 . -67) (undo-tree-id198 . -67) (undo-tree-id199 . -145) (undo-tree-id200 . -145) (undo-tree-id201 . -145) (undo-tree-id202 . -208) (undo-tree-id203 . -208) (undo-tree-id204 . -208) (undo-tree-id205 . -208) (undo-tree-id206 . -208) (undo-tree-id207 . -208) (undo-tree-id208 . -208) (undo-tree-id209 . -208) (undo-tree-id210 . -208) (undo-tree-id211 . -208) (undo-tree-id212 . -208) (undo-tree-id213 . -208) (undo-tree-id214 . -208) (undo-tree-id215 . -208) (undo-tree-id216 . -208) (undo-tree-id217 . -208) (undo-tree-id218 . -208) (undo-tree-id219 . -208) (undo-tree-id220 . -208) (undo-tree-id221 . -208) (undo-tree-id222 . -208) (undo-tree-id223 . -208) (undo-tree-id224 . -208) (undo-tree-id225 . -208) (undo-tree-id226 . -208) (undo-tree-id227 . -208) (undo-tree-id228 . -208) (undo-tree-id229 . -208) (undo-tree-id230 . -208) (undo-tree-id231 . -208) (undo-tree-id232 . -208) (undo-tree-id233 . -208) (undo-tree-id234 . -208) (undo-tree-id235 . -208) (undo-tree-id236 . -208) (undo-tree-id237 . -208) (undo-tree-id238 . -208) (undo-tree-id239 . -208) (undo-tree-id240 . -208) (undo-tree-id241 . -208) (undo-tree-id242 . -208) (undo-tree-id243 . -208) (undo-tree-id244 . -208) (undo-tree-id245 . -208) (undo-tree-id246 . -208) (undo-tree-id247 . -208) (undo-tree-id248 . -208) (undo-tree-id249 . -208) (undo-tree-id250 . -208) (undo-tree-id251 . -208) (undo-tree-id252 . -208) (undo-tree-id253 . -208) (undo-tree-id254 . -208) (undo-tree-id255 . -208) (undo-tree-id256 . -208) (undo-tree-id257 . -208) (undo-tree-id258 . -208) (undo-tree-id259 . -208) (undo-tree-id260 . -208) (undo-tree-id261 . -208) (undo-tree-id262 . -208) (undo-tree-id263 . -208) (undo-tree-id264 . -208) (undo-tree-id265 . -208) (undo-tree-id266 . -208) (undo-tree-id267 . -208) (undo-tree-id268 . -208) (undo-tree-id269 . -208) (undo-tree-id270 . -208) (undo-tree-id271 . -208) (undo-tree-id272 . -208) (undo-tree-id273 . -208) (undo-tree-id274 . -208) (undo-tree-id275 . -208) (undo-tree-id276 . -208) (undo-tree-id277 . -208) (undo-tree-id278 . -208) (undo-tree-id279 . -208) (undo-tree-id280 . -208) (undo-tree-id281 . -208) (undo-tree-id282 . -208) (undo-tree-id283 . -208) (undo-tree-id284 . -208) (undo-tree-id285 . -208) (undo-tree-id286 . -208) (undo-tree-id287 . -208) (undo-tree-id288 . -208) (undo-tree-id289 . -208) (undo-tree-id290 . -208) (undo-tree-id291 . -208) (undo-tree-id292 . -208) (undo-tree-id293 . -208) (undo-tree-id294 . -208) (undo-tree-id295 . -208) (undo-tree-id296 . -208) (undo-tree-id297 . -208) (undo-tree-id298 . -208) (undo-tree-id299 . -208) (undo-tree-id300 . -208) (undo-tree-id301 . -208) (undo-tree-id302 . -208) (undo-tree-id303 . -208) (undo-tree-id304 . -208) (undo-tree-id305 . -208) (undo-tree-id306 . -208) (undo-tree-id307 . -208) (undo-tree-id308 . -208) (undo-tree-id309 . -207) (undo-tree-id310 . -208) (undo-tree-id311 . -208) (undo-tree-id312 . -208) (undo-tree-id313 . -208) (undo-tree-id314 . -207) (undo-tree-id315 . -208) (undo-tree-id316 . -208) (undo-tree-id317 . -208) (undo-tree-id318 . -208) (undo-tree-id319 . -208) (undo-tree-id320 . -208) (undo-tree-id321 . -208) (undo-tree-id322 . -208) (undo-tree-id323 . -208) (undo-tree-id324 . -208) (undo-tree-id325 . -208) (undo-tree-id326 . -208) (undo-tree-id327 . -208) (undo-tree-id328 . -208) (undo-tree-id329 . -208) (undo-tree-id330 . -208) (undo-tree-id331 . -208) (undo-tree-id332 . -208) (undo-tree-id333 . -208) (undo-tree-id334 . -208) (undo-tree-id335 . -204) (undo-tree-id336 . -208) (undo-tree-id337 . -204) (undo-tree-id338 . -181) (undo-tree-id339 . -204) (undo-tree-id340 . -181) (undo-tree-id341 . -178) (undo-tree-id342 . -181) (undo-tree-id343 . -176) (undo-tree-id344 . -181) (undo-tree-id345 . -176) (undo-tree-id346 . -103) (undo-tree-id347 . -176) (undo-tree-id348 . -103) (undo-tree-id349 . -101) (undo-tree-id350 . -103) (undo-tree-id351 . -101) (undo-tree-id352 . -99) (undo-tree-id353 . -101) (undo-tree-id354 . -99) (undo-tree-id355 . -68) (undo-tree-id356 . -99) (undo-tree-id357 . -68) (undo-tree-id358 . -48) (undo-tree-id359 . -68) (undo-tree-id360 . -48) (undo-tree-id361 . -208) (undo-tree-id362 . -207) (t 26032 25912 816497 977000)) nil (26032 25939 396404 405000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -16467) (#("  " 0 2 (fontified t)) . -16439) (#("  " 0 2 (fontified t)) . -16427) (#("  " 0 2 (fontified t)) . -16359) (#("  " 0 2 (fontified t)) . -16332) (#("  " 0 2 (fontified t)) . -16270) (#("  " 0 2 (fontified t)) . -16249) (#("  " 0 2 (fontified t)) . -16222) (#("  " 0 2 (fontified t)) . -16210) (#("  " 0 2 (fontified t)) . -16142) (#("  " 0 2 (fontified t)) . -16115) (nil rear-nonsticky nil 16510 . 16511) (nil fontified nil 16052 . 16511) (16052 . 16511)) nil (26032 25959 153363 593000) 0 nil] [nil nil ((nil rear-nonsticky nil 16259 . 16260) (nil fontified nil 16239 . 16260) (nil fontified nil 16236 . 16239) (nil fontified nil 16224 . 16236) (nil fontified nil 16221 . 16224) (nil fontified nil 16153 . 16221) (nil fontified nil 16150 . 16153) (nil fontified nil 16123 . 16150) (nil fontified nil 16120 . 16123) (nil fontified nil 16103 . 16120) (nil fontified nil 16100 . 16103) (nil fontified nil 16055 . 16100) (nil fontified nil 16052 . 16055) (16052 . 16260)) ((#(";; The answer to AOC 2023 Day 10 Part 1 is 7030
;; Evaluation took:
;; 0.002 seconds of real time
;; 0.002301 seconds of total run time (0.002190 user, 0.000111 system)
;; 100.00% CPU
;; 487,472 bytes consed
" 0 3 (face font-lock-comment-delimiter-face fontified nil) 3 48 (face font-lock-comment-face fontified nil) 48 51 (face font-lock-comment-delimiter-face fontified nil) 51 68 (face font-lock-comment-face fontified nil) 68 71 (face font-lock-comment-delimiter-face fontified nil) 71 98 (face font-lock-comment-face fontified nil) 98 101 (face font-lock-comment-delimiter-face fontified nil) 101 169 (face font-lock-comment-face fontified nil) 169 172 (face font-lock-comment-delimiter-face fontified nil) 172 184 (face font-lock-comment-face fontified nil) 184 187 (face font-lock-comment-delimiter-face fontified nil) 187 205 (face font-lock-comment-face fontified nil) 205 206 (face font-lock-comment-face fontified nil) 206 207 (face font-lock-comment-face fontified nil) 207 208 (face font-lock-comment-face fontified nil rear-nonsticky nil)) . 16052) (undo-tree-id363 . -208) (undo-tree-id364 . -208) (undo-tree-id365 . -208) (undo-tree-id366 . -208) (undo-tree-id367 . -208) (undo-tree-id368 . -208) (undo-tree-id369 . -207) (undo-tree-id370 . -207) (undo-tree-id371 . -207) (undo-tree-id372 . -206) (undo-tree-id373 . -206) (undo-tree-id374 . -206) (undo-tree-id375 . -205) (undo-tree-id376 . -205) (undo-tree-id377 . -208) (undo-tree-id378 . -208) (undo-tree-id379 . -208) (undo-tree-id380 . -208) (nil fontified t 16055 . 16100) (nil fontified t 16103 . 16120) (nil fontified t 16123 . 16150) (nil fontified t 16153 . 16221) (nil fontified t 16224 . 16236) (nil rear-nonsticky t 16259 . 16260)) (26032 25939 225811 30000) 0 nil])
([nil nil ((apply -42 16052 16531 undo--wrap-and-run-primitive-undo 16052 16531 ((16506 . 16509) (16475 . 16478) (16460 . 16463) (16389 . 16392) (16359 . 16362) (16339 . 16342) (16292 . 16295) (16267 . 16270) (16237 . 16240) (16222 . 16225) (16151 . 16154) (16121 . 16124) (16101 . 16104) (16053 . 16056) 16052))) nil (26032 25959 153361 764000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -16257) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -16258) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("
" 0 1 (face font-lock-comment-face rear-nonsticky t fontified t)) . -16259) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) 16260) ((16257 . 16260)) (26032 25939 225462 209000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -16051) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) 16052) nil (26032 25959 153353 892000) 0 nil])
nil
([nil nil ((16530 . 16531) 16051) nil (26032 25959 152999 278000) 0 nil])
([nil nil ((71 . 73) (t 26032 27337 837036 86000)) nil (26032 27584 991593 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3330)) nil (26032 27584 991592 0) 0 nil])
([nil nil ((#("(defparameter map1 (parse-pipe-map *loop1*))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 18 (face font-lock-variable-name-face fontified t) 18 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-2-face) fontified t) 20 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-2-face) fontified t) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3330) (undo-tree-id68 . -44)) nil (26032 27584 991592 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3330)) nil (26032 27584 991591 0) 0 nil])
([nil nil ((#("(defparameter map2 (parse-pipe-map *loop2*))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 18 (face font-lock-variable-name-face fontified t) 18 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-2-face) fontified t) 20 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-2-face) fontified t) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3330) (undo-tree-id67 . -44)) nil (26032 27584 991590 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3330)) nil (26032 27584 991589 0) 0 nil])
([nil nil ((#("(defparameter map3 (parse-pipe-map (uiop:read-file-lines *data-file*)))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 18 (face font-lock-variable-name-face fontified t) 18 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-2-face) fontified t) 20 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-3-face) fontified t) 36 68 (fontified t) 68 69 (face (rainbow-delimiters-depth-3-face) fontified t) 69 70 (face (rainbow-delimiters-depth-2-face) fontified t) 70 71 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3330) (undo-tree-id66 . -71)) nil (26032 27584 991589 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3330)) nil (26032 27584 991588 0) 0 nil])
([nil nil ((#("(defparameter map3 (parse-pipe-map *loop3*))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 18 (face font-lock-variable-name-face fontified t) 18 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-2-face) fontified t) 20 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-2-face) fontified t) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t)) . 10768)) nil (26032 27584 991588 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10768)) nil (26032 27584 991587 0) 0 nil])
([nil nil ((#("(defparameter map4 (parse-pipe-map *loop4*))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 18 (face font-lock-variable-name-face fontified t) 18 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-2-face) fontified t) 20 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-2-face) fontified t) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t)) . 10768)) nil (26032 27584 991587 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10768)) nil (26032 27584 991586 0) 0 nil])
([nil nil ((#("(defparameter map5 (parse-pipe-map *loop5*))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 18 (face font-lock-variable-name-face fontified t) 18 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-2-face) fontified t) 20 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-2-face) fontified t) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t)) . 10768)) nil (26032 27584 991586 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10768)) nil (26032 27584 991585 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10768)) nil (26032 27584 991585 0) 0 nil])
([nil nil ((#("map1" 0 4 (fontified t)) . -12394) (undo-tree-id63 . -4) (undo-tree-id64 . -2) (undo-tree-id65 . -2) 12398) nil (26032 27584 991584 0) 0 nil])
([nil nil ((12394 . 12396)) nil (26032 27584 991582 0) 0 nil])
([nil nil ((12395 . 12409)) nil (26032 27584 991581 0) 0 nil])
([nil nil ((12409 . 12410)) nil (26032 27584 991581 0) 0 nil])
([nil nil ((12410 . 12415)) nil (26032 27584 991581 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -12414) (undo-tree-id62 . -1) 12415) nil (26032 27584 991580 0) 0 nil])
([nil nil ((12414 . 12415)) nil (26032 27584 991579 0) 0 nil])
([nil nil ((12410 . 12417) (#("*loop" 0 5 (fontified t)) . -12410) (undo-tree-id61 . -5) 12415) nil (26032 27584 991579 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -12415) (undo-tree-id59 . -1) (#("*" 0 1 (fontified t)) . -12416) (undo-tree-id60 . -1) 12417) nil (26032 27584 991578 0) 0 nil])
([nil nil ((12415 . 12416)) nil (26032 27584 991576 0) 0 nil])
([nil nil ((12416 . 12417)) nil (26032 27584 991576 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -12454) (undo-tree-id55 . -1) (#("a" 0 1 (fontified t)) . -12455) (undo-tree-id56 . -1) (#("p" 0 1 (fontified t)) . -12456) (undo-tree-id57 . -1) (#("2" 0 1 (fontified t)) . -12457) (undo-tree-id58 . -1) 12458) nil (26032 27584 991575 0) 0 nil])
([nil nil ((12454 . 12456)) nil (26032 27584 991573 0) 0 nil])
([nil nil ((12455 . 12465)) nil (26032 27584 991573 0) 0 nil])
([nil nil ((12455 . 12469) (#("parse-pipe" 0 10 (fontified t)) . -12455) (undo-tree-id54 . -10) 12465) nil (26032 27584 991572 0) 0 nil])
([nil nil ((12469 . 12470)) nil (26032 27584 991571 0) 0 nil])
([nil nil ((12470 . 12471)) nil (26032 27584 991571 0) 0 nil])
([nil nil ((12471 . 12477)) nil (26032 27584 991570 0) 0 nil])
([nil nil ((#("map3" 0 4 (fontified t)) . -12514) (undo-tree-id52 . -4) (undo-tree-id53 . -2) 12518) nil (26032 27584 991570 0) 0 nil])
([nil nil ((12514 . 12516)) nil (26032 27584 991568 0) 0 nil])
([nil nil ((12515 . 12522)) nil (26032 27584 991568 0) 0 nil])
([nil nil ((12515 . 12529) (#("parse-p" 0 7 (fontified t)) . -12515) (undo-tree-id51 . -7) 12522) nil (26032 27584 991568 0) 0 nil])
([nil nil ((12529 . 12530)) nil (26032 27584 991567 0) 0 nil])
([nil nil ((12530 . 12531)) nil (26032 27584 991566 0) 0 nil])
([nil nil ((12531 . 12535)) nil (26032 27584 991566 0) 0 nil])
([nil nil ((12535 . 12537)) nil (26032 27584 991565 0) 0 nil])
([nil nil ((#("map4" 0 4 (fontified t)) . -12574) (undo-tree-id49 . -4) (undo-tree-id50 . -2) 12578) nil (26032 27584 991565 0) 0 nil])
([nil nil ((12574 . 12576)) nil (26032 27584 991564 0) 0 nil])
([nil nil ((12575 . 12589)) nil (26032 27584 991563 0) 0 nil])
([nil nil ((12589 . 12590)) nil (26032 27584 991563 0) 0 nil])
([nil nil ((12590 . 12594)) nil (26032 27584 991563 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -12592) (undo-tree-id47 . -1) (#("o" 0 1 (fontified t)) . -12593) (undo-tree-id48 . -1) 12594) nil (26032 27584 991562 0) 0 nil])
([nil nil ((12592 . 12596)) nil (26032 27584 991561 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -12595) (undo-tree-id46 . -1) 12596) nil (26032 27584 991560 0) 0 nil])
([nil nil ((12595 . 12596)) nil (26032 27584 991560 0) 0 nil])
([nil nil ((#("map5" 0 4 (fontified t)) . -12633) (undo-tree-id44 . -4) (undo-tree-id45 . -1) 12637) nil (26032 27584 991559 0) 0 nil])
([nil nil ((12633 . 12635)) nil (26032 27584 991558 0) 0 nil])
([nil nil ((12596 . 12597)) nil (26032 27584 991557 0) 0 nil])
([nil nil ((12635 . 12645)) nil (26032 27584 991557 0) 0 nil])
([nil nil ((12635 . 12649) (#("parse-pipe" 0 10 (fontified t)) . -12635) (undo-tree-id43 . -10) 12645) nil (26032 27584 991557 0) 0 nil])
([nil nil ((12649 . 12650)) nil (26032 27584 991555 0) 0 nil])
([nil nil ((12650 . 12657)) nil (26032 27584 991555 0) 0 nil])
([nil nil ((#("  (let ((wall-count 0))

    (iter (for row below (array-dimension map 0))
      (setf wall-count 0)    ; reset wall count for each row

      (iter (for col below (array-dimension map 1))  ; walk down the row
        (let ((c (aref map row col)))                ; looking at each pipe type

          ;; check three conditions
          (cond ((char= c #\\^) (incf wall-count))  ; wall char, increment count

                ((and (char= c #\\.) (oddp wall-count)) ; inside loop!
                 (setf (aref map row col) #\\0))

                (t nil)))))                            ; otherwise do nothing
    map)" 0 2 (fontified t) 2 3 (face (rainbow-delimiters-depth-2-face) fontified t) 3 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 8 (face (rainbow-delimiters-depth-3-face) fontified t) 8 9 (face (rainbow-delimiters-depth-4-face) fontified t) 9 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-4-face) fontified t) 22 23 (face (rainbow-delimiters-depth-3-face) fontified t) 23 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-3-face) fontified t) 30 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-4-face) fontified t) 36 50 (fontified t) 50 51 (face (rainbow-delimiters-depth-5-face) fontified t) 51 67 (fontified t) 67 72 (fontified t) 72 73 (face (rainbow-delimiters-depth-5-face) fontified t) 73 74 (face (rainbow-delimiters-depth-4-face) fontified t) 74 75 (fontified t) 75 81 (fontified t) 81 82 (face (rainbow-delimiters-depth-4-face) fontified t) 82 99 (fontified t) 99 100 (face (rainbow-delimiters-depth-4-face) fontified t) 100 104 (fontified t) 104 112 (face font-lock-comment-face fontified t) 112 136 (face font-lock-comment-face fontified t) 136 143 (fontified t) 143 144 (face (rainbow-delimiters-depth-4-face) fontified t) 144 148 (fontified t) 148 149 (fontified t) 149 150 (face (rainbow-delimiters-depth-5-face) fontified t) 150 164 (fontified t) 164 165 (face (rainbow-delimiters-depth-6-face) fontified t) 165 186 (fontified t) 186 187 (face (rainbow-delimiters-depth-6-face) fontified t) 187 188 (face (rainbow-delimiters-depth-5-face) fontified t) 188 190 (fontified t) 190 210 (face font-lock-comment-face fontified t) 210 218 (fontified t) 218 219 (face (rainbow-delimiters-depth-5-face) fontified t) 219 222 (face font-lock-keyword-face fontified t) 222 223 (fontified t) 223 224 (face (rainbow-delimiters-depth-6-face) fontified t) 224 225 (face (rainbow-delimiters-depth-7-face) fontified t) 225 227 (fontified t) 227 228 (face (rainbow-delimiters-depth-8-face) fontified t) 228 244 (fontified t) 244 245 (face (rainbow-delimiters-depth-8-face) fontified t) 245 246 (face (rainbow-delimiters-depth-7-face) fontified t) 246 247 (face (rainbow-delimiters-depth-6-face) fontified t) 247 263 (fontified t) 263 268 (face font-lock-comment-face fontified t) 268 270 (face font-lock-comment-face fontified t) 270 291 (face font-lock-comment-face fontified t) 291 302 (fontified t) 302 305 (face font-lock-comment-delimiter-face fontified t) 305 309 (face font-lock-comment-face fontified t) 309 328 (fontified t face font-lock-comment-face) 328 338 (fontified t) 338 339 (face (rainbow-delimiters-depth-6-face) fontified t) 339 343 (face font-lock-keyword-face fontified t) 343 344 (fontified t) 344 345 (face (rainbow-delimiters-depth-7-face) fontified t) 345 346 (face (rainbow-delimiters-depth-8-face) fontified t) 346 357 (fontified t) 357 358 (face (rainbow-delimiters-depth-8-face) fontified t) 358 359 (fontified t) 359 360 (face (rainbow-delimiters-depth-8-face) fontified t) 360 375 (fontified t) 375 376 (face (rainbow-delimiters-depth-8-face) fontified t) 376 377 (face (rainbow-delimiters-depth-7-face) fontified t) 377 379 (fontified t) 379 408 (face font-lock-comment-face fontified t) 408 425 (fontified t) 425 426 (face (rainbow-delimiters-depth-7-face) fontified t) 426 427 (face (rainbow-delimiters-depth-8-face) fontified t) 427 431 (fontified t) 431 432 (face (rainbow-delimiters-depth-9-face) fontified t) 432 443 (fontified t) 443 444 (face (rainbow-delimiters-depth-9-face) fontified t) 444 445 (fontified t) 445 446 (face (rainbow-delimiters-depth-9-face) fontified t) 446 461 (fontified t) 461 462 (face (rainbow-delimiters-depth-9-face) fontified t) 462 463 (face (rainbow-delimiters-depth-8-face) fontified t) 463 464 (fontified t) 464 479 (face font-lock-comment-face fontified t) 479 496 (fontified t) 496 497 (face (rainbow-delimiters-depth-8-face) fontified t) 497 502 (fontified t) 502 503 (face (rainbow-delimiters-depth-9-face) fontified t) 503 519 (fontified t) 519 520 (face (rainbow-delimiters-depth-9-face) fontified t) 520 524 (fontified t) 524 525 (face (rainbow-delimiters-depth-8-face) fontified t) 525 526 (face (rainbow-delimiters-depth-7-face) fontified t) 526 544 (fontified t) 544 545 (face (rainbow-delimiters-depth-7-face) fontified t) 545 550 (fontified t) 550 551 (face (rainbow-delimiters-depth-7-face) fontified t) 551 552 (face (rainbow-delimiters-depth-6-face) fontified t) 552 553 (face (rainbow-delimiters-depth-5-face) fontified t) 553 554 (face (rainbow-delimiters-depth-4-face) fontified t) 554 555 (face (rainbow-delimiters-depth-3-face) fontified t) 555 583 (fontified t) 583 606 (face font-lock-comment-face fontified t) 606 613 (fontified t) 613 614 (face (rainbow-delimiters-depth-2-face) fontified t)) . 13858) (undo-tree-id0 . -137) (undo-tree-id1 . -137) (undo-tree-id2 . -137) (undo-tree-id3 . -137) (undo-tree-id4 . -137) (undo-tree-id5 . -137) (undo-tree-id6 . -137) (undo-tree-id7 . -137) (undo-tree-id8 . -137) (undo-tree-id9 . -137) (undo-tree-id10 . -137) (undo-tree-id11 . -137) (undo-tree-id12 . -137) (undo-tree-id13 . -137) (undo-tree-id14 . -136) (undo-tree-id15 . -136) (undo-tree-id16 . -136) (undo-tree-id17 . -136) (undo-tree-id18 . -136) (undo-tree-id19 . -136) (undo-tree-id20 . -136) (undo-tree-id21 . -136) (undo-tree-id22 . -136) (undo-tree-id23 . -136) (undo-tree-id24 . -136) (undo-tree-id25 . -75) (undo-tree-id26 . -75) (undo-tree-id27 . -75) (undo-tree-id28 . -75) (undo-tree-id29 . -25) (undo-tree-id30 . -25) (undo-tree-id31 . -24) (undo-tree-id32 . -25) (undo-tree-id33 . -479) (undo-tree-id34 . -479) (undo-tree-id35 . -479) (undo-tree-id36 . -292) (undo-tree-id37 . -292) (undo-tree-id38 . -292) (undo-tree-id39 . -75) (undo-tree-id40 . -75) (undo-tree-id41 . -75) (undo-tree-id42 . -614)) nil (26032 27584 991553 0) 0 nil])
([nil nil ((13858 . 13860)) nil (26032 27584 991528 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15242) (t 26032 27584 993494 822000)) nil (26032 27648 631431 0) 0 nil])
([nil nil ((#(";; The answer to AOC 2023 Day 10 Part 1 is 7030" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 47 (face font-lock-comment-face fontified t)) . 15242) (undo-tree-id139 . 47) (undo-tree-id140 . -47)) nil (26032 27648 631430 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15242) (undo-tree-id138 . 1)) nil (26032 27648 631424 0) 0 nil])
([nil nil ((#(";; Evaluation took:" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 19 (face font-lock-comment-face fontified t)) . 15242) (undo-tree-id136 . 19) (undo-tree-id137 . -19)) nil (26032 27648 631423 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15242) (undo-tree-id135 . 1)) nil (26032 27648 631422 0) 0 nil])
([nil nil ((#(";; 0.003 seconds of real time" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 29 (face font-lock-comment-face fontified t)) . 15242) (undo-tree-id133 . 29) (undo-tree-id134 . -29)) nil (26032 27648 631421 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15242) (undo-tree-id132 . 1)) nil (26032 27648 631421 0) 0 nil])
([nil nil ((#(";; 0.002675 seconds of total run time (0.002675 user, 0.000000 system)" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 19 (face font-lock-comment-face fontified t) 19 21 (face font-lock-comment-face fontified t) 21 70 (face font-lock-comment-face fontified t)) . 15242) (undo-tree-id130 . 70) (undo-tree-id131 . -70)) nil (26032 27648 631420 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15242) (undo-tree-id129 . 1)) nil (26032 27648 631419 0) 0 nil])
([nil nil ((#(";; 100.00% CPU" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 14 (face font-lock-comment-face fontified t)) . 15242) (undo-tree-id127 . 14) (undo-tree-id128 . -14)) nil (26032 27648 631418 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15242) (undo-tree-id126 . 1)) nil (26032 27648 631417 0) 0 nil])
([nil nil ((#(";; 8,555,531 processor cycles" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 29 (face font-lock-comment-face fontified t)) . 15242) (undo-tree-id124 . 29) (undo-tree-id125 . -29)) nil (26032 27648 631417 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15242) (undo-tree-id123 . 1)) nil (26032 27648 631416 0) 0 nil])
([nil nil ((#(";; 842,512 bytes consed" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 23 (face font-lock-comment-face fontified t)) . 15242) (undo-tree-id121 . 23) (undo-tree-id122 . -23)) nil (26032 27648 631415 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15242) (undo-tree-id120 . 1)) nil (26032 27648 631414 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15242) (undo-tree-id119 . 1)) nil (26032 28121 668447 0) 0 nil])
([nil nil ((#(";; The answer to AOC 2023 Day 10 Part 2 is 285" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 46 (face font-lock-comment-face fontified t)) . 15242)) ((15242 . 15288)) (26032 28123 954755 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15242)) ((15242 . 15243)) (26032 28124 193141 0) 0 nil])
([nil nil ((#(";; Evaluation took:" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 19 (face font-lock-comment-face fontified t)) . 15242)) ((15242 . 15261)) (26032 28124 212325 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15242)) ((15242 . 15243)) (26032 28124 227872 0) 0 nil])
([nil nil ((#(";; 0.003 seconds of real time" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 29 (face font-lock-comment-face fontified t)) . 15242)) ((15242 . 15271)) (26032 28124 240884 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15242)) ((15242 . 15243)) (26032 28124 255812 0) 0 nil])
([nil nil ((#(";; 0.004307 seconds of total run time (0.000907 user, 0.003400 system)" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 70 (face font-lock-comment-face fontified t)) . 15242)) ((15242 . 15312)) (26032 28124 272517 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15242)) ((15242 . 15243)) (26032 28124 290189 0) 0 nil])
([nil nil ((#(";; 133.33% CPU" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 14 (face font-lock-comment-face fontified t)) . 15242)) ((15242 . 15256)) (26032 28124 306728 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15242)) ((15242 . 15243)) (26032 28124 323175 0) 0 nil])
([nil nil ((#(";; 13,758,139 processor cycles" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 30 (face font-lock-comment-face fontified t)) . 15242)) ((15242 . 15272)) (26032 28124 339785 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15242)) ((15242 . 15243)) (26032 28124 356476 0) 0 nil])
([nil nil ((#(";; 1,235,504 bytes consed" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 25 (face font-lock-comment-face fontified t)) . 15242)) ((15242 . 15267)) (26032 28124 373733 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15242)) ((15242 . 15243)) (26032 28124 390648 0) 0 nil])
([nil nil ((#("  " 0 1 (fontified nil) 1 2 (rear-nonsticky t fontified nil)) . 15625) (#("  " 0 2 (fontified nil)) . 15602) (#("  " 0 2 (fontified nil)) . 15590) (#("  " 0 2 (fontified nil)) . 15522) (#("  " 0 2 (fontified nil)) . 15495) (#("  " 0 2 (fontified nil)) . 15433) (#("  " 0 2 (fontified nil)) . 15412) (#("  " 0 2 (fontified nil)) . 15400) (#("  " 0 2 (fontified nil)) . 15332) (#("  " 0 2 (fontified nil)) . 15305) (nil rear-nonsticky nil 15644 . 15645) (nil fontified nil 15242 . 15243) (nil fontified nil 15243 . 15288) (nil fontified nil 15288 . 15305) (nil fontified nil 15444 . 15488) (nil fontified nil 15488 . 15505) (15242 . 15645)) ((#("
The answer to AOC 2023 Day 10 Part 1 is 7030
Evaluation took:
  0.004 seconds of real time
  0.004525 seconds of total run time (0.004416 user, 0.000109 system)
  125.00% CPU
  708,768 bytes consed
  
The answer to AOC 2023 Day 10 Part 2 is 285
Evaluation took:
  0.007 seconds of real time
  0.007417 seconds of total run time (0.007332 user, 0.000085 system)
  100.00% CPU
  1,091,104 bytes consed
  " 0 1 (fontified nil) 1 46 (fontified nil) 46 63 (fontified nil) 63 65 (fontified nil) 65 92 (fontified nil) 92 94 (fontified nil) 94 129 (fontified nil) 129 130 (face (rainbow-delimiters-depth-1-face) fontified nil) 130 160 (fontified nil) 160 161 (face (rainbow-delimiters-depth-1-face) fontified nil) 161 162 (fontified nil) 162 164 (fontified nil) 164 176 (fontified nil) 176 178 (fontified nil) 178 199 (fontified nil) 199 201 (fontified nil) 201 202 (fontified nil) 202 246 (fontified nil) 246 263 (fontified nil) 263 265 (fontified nil) 265 292 (fontified nil) 292 294 (fontified nil) 294 329 (fontified nil) 329 330 (face (rainbow-delimiters-depth-1-face) fontified nil) 330 360 (fontified nil) 360 361 (face (rainbow-delimiters-depth-1-face) fontified nil) 361 362 (fontified nil) 362 364 (fontified nil) 364 376 (fontified nil) 376 378 (fontified nil) 378 401 (fontified nil) 401 402 (fontified nil) 402 403 (rear-nonsticky nil fontified nil)) . 15242) (undo-tree-id472 . -401) (nil fontified t 15488 . 15505) (nil fontified t 15444 . 15488) (nil fontified t 15288 . 15305) (nil fontified t 15243 . 15288) (nil fontified t 15242 . 15243) (nil rear-nonsticky t 15644 . 15645) (15305 . 15307) (15332 . 15334) (15400 . 15402) (15412 . 15414) (15433 . 15435) (15495 . 15497) (15522 . 15524) (15590 . 15592) (15602 . 15604) (15625 . 15627)) (26032 28124 410341 0) 0 nil])
([nil nil ((apply -36 15242 15661 undo--wrap-and-run-primitive-undo 15242 15661 ((15635 . 15638) (15620 . 15623) (15549 . 15552) (15519 . 15522) (15499 . 15502) (15452 . 15455) (15427 . 15430) (15412 . 15415) (15341 . 15344) (15311 . 15314) (15291 . 15294) (15243 . 15246) 15625))) ((apply 36 15242 15625 undo--wrap-and-run-primitive-undo 15242 15625 ((#(";; " 0 3 (face font-lock-comment-delimiter-face)) . 15243) (#(";; " 0 3 (face font-lock-comment-delimiter-face)) . 15291) (#(";; " 0 3 (face font-lock-comment-delimiter-face)) . 15311) (#(";; " 0 3 (face font-lock-comment-delimiter-face)) . 15341) (#(";; " 0 3 (face font-lock-comment-delimiter-face)) . 15412) (#(";; " 0 3 (face font-lock-comment-delimiter-face)) . 15427) (#(";; " 0 3 (face font-lock-comment-delimiter-face)) . 15452) (#(";; " 0 3 (face font-lock-comment-delimiter-face)) . 15499) (#(";; " 0 3 (face font-lock-comment-delimiter-face)) . 15519) (#(";; " 0 3 (face font-lock-comment-delimiter-face)) . 15549) (#(";; " 0 3 (face font-lock-comment-delimiter-face)) . 15620) (#(";; " 0 3 (face font-lock-comment-delimiter-face)) . 15635) 3699))) (26032 28124 429478 0) 0 nil])
([nil nil ((#("map" 0 3 (fontified t)) . 3696) (undo-tree-id473 . -3) (undo-tree-id474 . -3) (undo-tree-id475 . -3) (undo-tree-id476 . -3) (undo-tree-id477 . -3) (undo-tree-id478 . -3) (undo-tree-id479 . -3)) ((3696 . 3699)) (26032 28124 446893 0) 0 nil])
([nil nil ((#("loc " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 3692) (undo-tree-id480 . -4) (undo-tree-id481 . -4) (undo-tree-id482 . -4) (undo-tree-id483 . -4) (undo-tree-id484 . -4) (undo-tree-id485 . -4) (undo-tree-id486 . -4) (undo-tree-id487 . -4) (undo-tree-id488 . -4) (undo-tree-id489 . -4) (undo-tree-id490 . -4) (undo-tree-id491 . -4) (undo-tree-id492 . -4)) ((3692 . 3696)) (26032 28124 459042 0) 0 nil])
([nil nil ((3692 . 3695)) ((#("map" 0 3 (fontified t)) . 3692) (undo-tree-id465 . -3) (undo-tree-id466 . -3) (undo-tree-id467 . -3) (undo-tree-id468 . -3) (undo-tree-id469 . -3) (undo-tree-id470 . -3) (undo-tree-id471 . -3)) (26032 28124 473270 0) 0 nil])
([nil nil ((3695 . 3696)) ((#(" " 0 1 (fontified t)) . 3695) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1)) (26032 28124 489739 0) 0 nil])
([nil nil ((3696 . 3699)) ((#("loc" 0 3 (fontified t)) . 3696)) (26032 28124 506345 0) 0 nil])
([nil nil ((#(" (cons 2 0)" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-4-face) fontified t) 2 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-4-face) fontified t)) . 3851)) ((3851 . 3862)) (26032 28124 523137 0) 0 nil])
([nil nil ((3876 . 3877)) ((#(" " 0 1 (fontified t)) . 3876) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1)) (26032 28124 539641 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3887 . 3888) (3877 . 3888)) ((#(" (cons 2 0)" 0 1 (fontified nil) 1 2 (face (rainbow-delimiters-depth-4-face) fontified nil) 2 10 (fontified nil) 10 11 (face (rainbow-delimiters-depth-4-face) rear-nonsticky nil fontified nil)) . 3877) (nil rear-nonsticky t 3887 . 3888)) (26032 28124 556054 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3876) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1)) ((3876 . 3877)) (26032 28124 572995 0) 0 nil])
([nil nil ((#(" (cons 0 0)" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-4-face) fontified t) 2 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-4-face) fontified t)) . 3908)) ((3908 . 3919)) (26032 28124 589560 0) 0 nil])
([nil nil ((3933 . 3934)) ((#(" " 0 1 (fontified t)) . 3933) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1)) (26032 28124 606438 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3944 . 3945) (3934 . 3945)) ((#(" (cons 0 0)" 0 1 (fontified nil) 1 2 (face (rainbow-delimiters-depth-4-face) fontified nil) 2 10 (fontified nil) 10 11 (face (rainbow-delimiters-depth-4-face) rear-nonsticky nil fontified nil)) . 3934) (nil rear-nonsticky t 3944 . 3945)) (26032 28124 623412 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3933) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1)) ((3933 . 3934)) (26032 28124 639901 0) 0 nil])
([nil nil ((#(" (cons 1 1)" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-4-face) fontified t) 2 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-4-face) fontified t)) . 3964)) ((3964 . 3975)) (26032 28124 656594 0) 0 nil] [nil nil ((#(" (cons 0 0)))
  (5a:is-true (s? " 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-4-face) fontified t) 2 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-4-face) rear-nonsticky t fontified t) 11 12 (face (rainbow-delimiters-depth-3-face) fontified t) 12 13 (face (rainbow-delimiters-depth-2-face) fontified t) 13 14 (fontified t) 14 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 28 (fontified t) 28 29 (face (rainbow-delimiters-depth-3-face) fontified t) 29 32 (fontified t)) . 3933) (undo-tree-id141 . -32) (undo-tree-id142 . 21) (undo-tree-id143 . -11) (undo-tree-id144 . -11) (undo-tree-id145 . 21) (undo-tree-id146 . 21) (undo-tree-id147 . 21) (undo-tree-id148 . -11) (undo-tree-id149 . -11) (undo-tree-id150 . -11) (undo-tree-id151 . -11) (undo-tree-id152 . -11) (undo-tree-id153 . 32) (undo-tree-id154 . -32) (undo-tree-id155 . -32) (undo-tree-id156 . -32) (undo-tree-id157 . -32) (undo-tree-id158 . -32) (undo-tree-id159 . -32) (undo-tree-id160 . -14) (undo-tree-id161 . -32) (undo-tree-id162 . -32) (undo-tree-id163 . -32) (undo-tree-id164 . -32) (undo-tree-id165 . -32) 3965) ((3933 . 3965)) (26032 27714 377978 0) 0 nil])
([nil nil ((3989 . 3990)) ((#(" " 0 1 (fontified t)) . 3989) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1)) (26032 28124 672811 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 4000 . 4001) (3990 . 4001)) ((#(" (cons 1 1)" 0 1 (fontified nil) 1 2 (face (rainbow-delimiters-depth-4-face) fontified nil) 2 10 (fontified nil) 10 11 (face (rainbow-delimiters-depth-4-face) rear-nonsticky nil fontified nil)) . 3990) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (nil rear-nonsticky t 4000 . 4001)) (26032 28124 690289 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3990) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1)) ((3990 . 3991)) (26032 28124 706431 0) 0 nil])
([nil nil ((#(" map" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 4226) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4)) ((4226 . 4230)) (26032 28124 723221 0) 0 nil])
([nil nil ((4211 . 4212)) ((#(" " 0 1 (fontified t)) . 4211) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1)) (26032 28124 739731 0) 0 nil])
([nil nil ((4212 . 4215)) ((#("map" 0 3 (fontified t)) . 4212) (t 26032 27778 797938 896000)) (26032 28124 756257 0) 0 nil])
([nil nil ((13725 . 13726) (t 26032 27778 797938 896000)) nil (26032 28223 826682 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14473 . 14474) (nil fontified nil 13726 . 14474) (13726 . 14474)) nil (26032 28223 826682 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14474) (undo-tree-id865 . 1) (undo-tree-id866 . 1) (undo-tree-id867 . 1) (undo-tree-id868 . 1) (undo-tree-id869 . 1) (undo-tree-id870 . 1) (undo-tree-id871 . 1) (undo-tree-id872 . 1) (undo-tree-id873 . 1) (undo-tree-id874 . 1) (undo-tree-id875 . 1) (undo-tree-id876 . 1) (undo-tree-id877 . 1) (undo-tree-id878 . 1)) nil (26032 28223 826681 0) 0 nil])
([nil nil ((#("(defun mark-inside (map)
  \"given a prettified pipe-flow-map, replace all the points inside the
path with #\\0, return modified map\"
  )" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 18 (face font-lock-function-name-face fontified t) 18 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-2-face) fontified t) 20 23 (fontified t) 23 24 (face (rainbow-delimiters-depth-2-face) fontified t) 24 25 (fontified t) 25 27 (fontified t) 27 131 (face font-lock-doc-face fontified t) 131 132 (fontified t) 132 134 (fontified t) 134 135 (face (rainbow-delimiters-depth-1-face) fontified t)) . 14474) (undo-tree-id848 . -135) (undo-tree-id849 . -132) (undo-tree-id850 . 135) (undo-tree-id851 . 135) (undo-tree-id852 . 135) (undo-tree-id853 . 135) (undo-tree-id854 . 135) (undo-tree-id855 . 135) (undo-tree-id856 . 135) (undo-tree-id857 . 135) (undo-tree-id858 . 135) (undo-tree-id859 . 135) (undo-tree-id860 . 135) (undo-tree-id861 . 135) (undo-tree-id862 . 135) (undo-tree-id863 . 135) (undo-tree-id864 . 135)) nil (26032 28223 826676 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14474) (undo-tree-id832 . 1) (undo-tree-id833 . 1) (undo-tree-id834 . 1) (undo-tree-id835 . 1) (undo-tree-id836 . 1) (undo-tree-id837 . 1) (undo-tree-id838 . 1) (undo-tree-id839 . 1) (undo-tree-id840 . 1) (undo-tree-id841 . 1) (undo-tree-id842 . 1) (undo-tree-id843 . 1) (undo-tree-id844 . 1) (undo-tree-id845 . 1) (undo-tree-id846 . 1) (undo-tree-id847 . 1)) nil (26032 28223 826671 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14474) (undo-tree-id815 . 1) (undo-tree-id816 . 1) (undo-tree-id817 . 1) (undo-tree-id818 . 1) (undo-tree-id819 . 1) (undo-tree-id820 . 1) (undo-tree-id821 . 1) (undo-tree-id822 . 1) (undo-tree-id823 . 1) (undo-tree-id824 . 1) (undo-tree-id825 . 1) (undo-tree-id826 . 1) (undo-tree-id827 . 1) (undo-tree-id828 . 1) (undo-tree-id829 . 1) (undo-tree-id830 . 1) (undo-tree-id831 . 1)) nil (26032 28223 826665 0) 0 nil])
([nil nil ((14719 . 14725) (#("                " 0 16 (fontified t)) . -14719) (14669 . 14673) (#("              " 0 14 (fontified t)) . -14669) (14628 . 14632) (#("              " 0 14 (fontified t)) . -14628) (14580 . 14582) (#("            " 0 12 (fontified t)) . -14580) (14504 . 14506) (#("            " 0 12 (fontified t)) . -14504) (14759 . 14775) (#("      " 0 6 (fontified t)) . 14759) (14699 . 14713) (#("    " 0 4 (fontified t)) . 14699) (14677 . 14688) (#("                     " 0 21 (fontified nil)) . 14677) (14648 . 14662) (#("    " 0 4 (fontified t)) . 14648) (14590 . 14602) (#("  " 0 2 (fontified t)) . 14590) (14504 . 14516) (#("  " 0 2 (fontified t)) . 14504) (14473 . 14474) (#("
" 0 1 (rear-nonsticky t fontified t)) . -14473) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) 14474) nil (26032 28223 826655 0) 0 nil])
([nil nil ((14474 . 14475) (14647 . 14668) (#("           " 0 11 (fontified t)) . 14647) (14473 . 14474) (#(" " 0 1 (fontified t)) . 14473) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) 14474) nil (26032 28223 826553 0) 0 nil])
([nil nil ((16273 . 16274) (t 26032 28223 829485 677000)) nil (26032 28253 970487 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -16634) (#("  " 0 2 (fontified t)) . -16622) (#("  " 0 2 (fontified t)) . -16554) (#("  " 0 2 (fontified t)) . -16527) (#("  " 0 2 (fontified t)) . -16465) (#("  " 0 2 (fontified t)) . -16444) (#("  " 0 2 (fontified t)) . -16432) (#("  " 0 2 (fontified t)) . -16364) (#("  " 0 2 (fontified t)) . -16337) (nil rear-nonsticky nil 16673 . 16674) (nil fontified nil 16274 . 16674) (16274 . 16674)) nil (26032 28253 970486 0) 0 nil])
([nil nil ((apply -36 16274 16692 undo--wrap-and-run-primitive-undo 16274 16692 ((16667 . 16670) (16652 . 16655) (16581 . 16584) (16551 . 16554) (16531 . 16534) (16484 . 16487) (16459 . 16462) (16444 . 16447) (16373 . 16376) (16343 . 16346) (16323 . 16326) (16275 . 16278) 16274))) nil (26032 28253 970484 0) 0 nil])
([nil nil ((#(";; The answer to AOC 2023 Day 10 Part 1 is 7030" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 47 (face font-lock-comment-face fontified t)) . 15855) (undo-tree-id1269 . -47)) nil (26032 28253 970484 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15855) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . 1)) nil (26032 28253 970483 0) 0 nil])
([nil nil ((#(";; Evaluation took:" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 19 (face font-lock-comment-face fontified t)) . 15855) (undo-tree-id1263 . 19) (undo-tree-id1264 . 19) (undo-tree-id1265 . -19)) nil (26032 28253 970482 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15855) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . 1) (undo-tree-id1261 . 1) (undo-tree-id1262 . 1)) nil (26032 28253 970480 0) 0 nil])
([nil nil ((#(";; 0.004 seconds of real time" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 29 (face font-lock-comment-face fontified t)) . 15855) (undo-tree-id1253 . 29) (undo-tree-id1254 . 29) (undo-tree-id1255 . 29) (undo-tree-id1256 . 29) (undo-tree-id1257 . -29)) nil (26032 28253 970477 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15855) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . 1) (undo-tree-id1249 . 1) (undo-tree-id1250 . 1) (undo-tree-id1251 . 1) (undo-tree-id1252 . 1)) nil (26032 28253 970475 0) 0 nil])
([nil nil ((#(";; 0.004525 seconds of total run time (0.004416 user, 0.000109 system)" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 20 (face font-lock-comment-face fontified t) 20 38 (face font-lock-comment-face fontified t) 38 39 (face font-lock-comment-face fontified t) 39 52 (face font-lock-comment-face fontified t) 52 69 (face font-lock-comment-face fontified t) 69 70 (face font-lock-comment-face fontified t)) . 15855) (undo-tree-id1239 . 70) (undo-tree-id1240 . 70) (undo-tree-id1241 . 70) (undo-tree-id1242 . 70) (undo-tree-id1243 . 70) (undo-tree-id1244 . 70) (undo-tree-id1245 . -70)) nil (26032 28253 970472 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15855) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . 1) (undo-tree-id1234 . 1) (undo-tree-id1235 . 1) (undo-tree-id1236 . 1) (undo-tree-id1237 . 1) (undo-tree-id1238 . 1)) nil (26032 28253 970469 0) 0 nil])
([nil nil ((#(";; 125.00% CPU" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 14 (face font-lock-comment-face fontified t)) . 15855) (undo-tree-id1224 . 14) (undo-tree-id1225 . 14) (undo-tree-id1226 . 14) (undo-tree-id1227 . 14) (undo-tree-id1228 . 14) (undo-tree-id1229 . 14) (undo-tree-id1230 . -14)) nil (26032 28253 970465 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15855) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . 1) (undo-tree-id1219 . 1) (undo-tree-id1220 . 1) (undo-tree-id1221 . 1) (undo-tree-id1222 . 1) (undo-tree-id1223 . 1)) nil (26032 28253 970462 0) 0 nil])
([nil nil ((#(";; 708,768 bytes consed" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 23 (face font-lock-comment-face fontified t)) . 15855) (undo-tree-id1209 . 23) (undo-tree-id1210 . 23) (undo-tree-id1211 . 23) (undo-tree-id1212 . 23) (undo-tree-id1213 . 23) (undo-tree-id1214 . 23) (undo-tree-id1215 . -23)) nil (26032 28253 970458 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15855) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . 1) (undo-tree-id1204 . 1) (undo-tree-id1205 . 1) (undo-tree-id1206 . 1) (undo-tree-id1207 . 1) (undo-tree-id1208 . 1)) nil (26032 28253 970455 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15855) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . 1) (undo-tree-id1196 . 1) (undo-tree-id1197 . 1) (undo-tree-id1198 . 1) (undo-tree-id1199 . 1) (undo-tree-id1200 . 1)) nil (26032 28253 970452 0) 0 nil])
([nil nil ((#(";; The answer to AOC 2023 Day 10 Part 2 is 285" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 46 (face font-lock-comment-face fontified t)) . 15855) (undo-tree-id1186 . 46) (undo-tree-id1187 . 46) (undo-tree-id1188 . 46) (undo-tree-id1189 . 46) (undo-tree-id1190 . 46) (undo-tree-id1191 . 46) (undo-tree-id1192 . -46)) nil (26032 28253 970448 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15855) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . 1) (undo-tree-id1181 . 1) (undo-tree-id1182 . 1) (undo-tree-id1183 . 1) (undo-tree-id1184 . 1) (undo-tree-id1185 . 1)) nil (26032 28253 970445 0) 0 nil])
([nil nil ((#(";; Evaluation took:" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 19 (face font-lock-comment-face fontified t)) . 15855) (undo-tree-id1162 . 19) (undo-tree-id1163 . 19) (undo-tree-id1164 . 19) (undo-tree-id1165 . 19) (undo-tree-id1166 . 19) (undo-tree-id1167 . 19) (undo-tree-id1168 . 19) (undo-tree-id1169 . 19) (undo-tree-id1170 . 19) (undo-tree-id1171 . 19) (undo-tree-id1172 . 19) (undo-tree-id1173 . 19) (undo-tree-id1174 . 19) (undo-tree-id1175 . 19) (undo-tree-id1176 . 19) (undo-tree-id1177 . -19)) nil (26032 28253 970441 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15855) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . 1) (undo-tree-id1147 . 1) (undo-tree-id1148 . 1) (undo-tree-id1149 . 1) (undo-tree-id1150 . 1) (undo-tree-id1151 . 1) (undo-tree-id1152 . 1) (undo-tree-id1153 . 1) (undo-tree-id1154 . 1) (undo-tree-id1155 . 1) (undo-tree-id1156 . 1) (undo-tree-id1157 . 1) (undo-tree-id1158 . 1) (undo-tree-id1159 . 1) (undo-tree-id1160 . 1) (undo-tree-id1161 . 1)) nil (26032 28253 970435 0) 0 nil])
([nil nil ((#(";; 0.007 seconds of real time" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 29 (face font-lock-comment-face fontified t)) . 15855) (undo-tree-id1126 . 29) (undo-tree-id1127 . 29) (undo-tree-id1128 . 29) (undo-tree-id1129 . 29) (undo-tree-id1130 . 29) (undo-tree-id1131 . 29) (undo-tree-id1132 . 29) (undo-tree-id1133 . 29) (undo-tree-id1134 . 29) (undo-tree-id1135 . 29) (undo-tree-id1136 . 29) (undo-tree-id1137 . 29) (undo-tree-id1138 . 29) (undo-tree-id1139 . 29) (undo-tree-id1140 . 29) (undo-tree-id1141 . 29) (undo-tree-id1142 . 29) (undo-tree-id1143 . -29)) nil (26032 28253 970427 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15855) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . 1) (undo-tree-id1109 . 1) (undo-tree-id1110 . 1) (undo-tree-id1111 . 1) (undo-tree-id1112 . 1) (undo-tree-id1113 . 1) (undo-tree-id1114 . 1) (undo-tree-id1115 . 1) (undo-tree-id1116 . 1) (undo-tree-id1117 . 1) (undo-tree-id1118 . 1) (undo-tree-id1119 . 1) (undo-tree-id1120 . 1) (undo-tree-id1121 . 1) (undo-tree-id1122 . 1) (undo-tree-id1123 . 1) (undo-tree-id1124 . 1) (undo-tree-id1125 . 1)) nil (26032 28253 970420 0) 0 nil])
([nil nil ((#(";; 0.007417 seconds of total run time (0.007332 user, 0.000085 system)" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 38 (face font-lock-comment-face fontified t) 38 39 (face font-lock-comment-face fontified t) 39 69 (face font-lock-comment-face fontified t) 69 70 (face font-lock-comment-face fontified t)) . 15855) (undo-tree-id1086 . 70) (undo-tree-id1087 . 70) (undo-tree-id1088 . 70) (undo-tree-id1089 . 70) (undo-tree-id1090 . 70) (undo-tree-id1091 . 70) (undo-tree-id1092 . 70) (undo-tree-id1093 . 70) (undo-tree-id1094 . 70) (undo-tree-id1095 . 70) (undo-tree-id1096 . 70) (undo-tree-id1097 . 70) (undo-tree-id1098 . 70) (undo-tree-id1099 . 70) (undo-tree-id1100 . 70) (undo-tree-id1101 . 70) (undo-tree-id1102 . 70) (undo-tree-id1103 . 70) (undo-tree-id1104 . 70) (undo-tree-id1105 . -70)) nil (26032 28253 970412 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15855) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . 1) (undo-tree-id1067 . 1) (undo-tree-id1068 . 1) (undo-tree-id1069 . 1) (undo-tree-id1070 . 1) (undo-tree-id1071 . 1) (undo-tree-id1072 . 1) (undo-tree-id1073 . 1) (undo-tree-id1074 . 1) (undo-tree-id1075 . 1) (undo-tree-id1076 . 1) (undo-tree-id1077 . 1) (undo-tree-id1078 . 1) (undo-tree-id1079 . 1) (undo-tree-id1080 . 1) (undo-tree-id1081 . 1) (undo-tree-id1082 . 1) (undo-tree-id1083 . 1) (undo-tree-id1084 . 1) (undo-tree-id1085 . 1)) nil (26032 28253 970404 0) 0 nil])
([nil nil ((#(";; 100.00% CPU" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 14 (face font-lock-comment-face fontified t)) . 15855) (undo-tree-id1042 . 14) (undo-tree-id1043 . 14) (undo-tree-id1044 . 14) (undo-tree-id1045 . 14) (undo-tree-id1046 . 14) (undo-tree-id1047 . 14) (undo-tree-id1048 . 14) (undo-tree-id1049 . 14) (undo-tree-id1050 . 14) (undo-tree-id1051 . 14) (undo-tree-id1052 . 14) (undo-tree-id1053 . 14) (undo-tree-id1054 . 14) (undo-tree-id1055 . 14) (undo-tree-id1056 . 14) (undo-tree-id1057 . 14) (undo-tree-id1058 . 14) (undo-tree-id1059 . 14) (undo-tree-id1060 . 14) (undo-tree-id1061 . 14) (undo-tree-id1062 . 14) (undo-tree-id1063 . -14)) nil (26032 28253 970395 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15855) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . 1) (undo-tree-id1021 . 1) (undo-tree-id1022 . 1) (undo-tree-id1023 . 1) (undo-tree-id1024 . 1) (undo-tree-id1025 . 1) (undo-tree-id1026 . 1) (undo-tree-id1027 . 1) (undo-tree-id1028 . 1) (undo-tree-id1029 . 1) (undo-tree-id1030 . 1) (undo-tree-id1031 . 1) (undo-tree-id1032 . 1) (undo-tree-id1033 . 1) (undo-tree-id1034 . 1) (undo-tree-id1035 . 1) (undo-tree-id1036 . 1) (undo-tree-id1037 . 1) (undo-tree-id1038 . 1) (undo-tree-id1039 . 1) (undo-tree-id1040 . 1) (undo-tree-id1041 . 1)) nil (26032 28253 970386 0) 0 nil])
([nil nil ((#(";; 1,091,104 bytes consed" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 25 (face font-lock-comment-face fontified t)) . 15855) (undo-tree-id994 . 25) (undo-tree-id995 . 25) (undo-tree-id996 . 25) (undo-tree-id997 . 25) (undo-tree-id998 . 25) (undo-tree-id999 . 25) (undo-tree-id1000 . 25) (undo-tree-id1001 . 25) (undo-tree-id1002 . 25) (undo-tree-id1003 . 25) (undo-tree-id1004 . 25) (undo-tree-id1005 . 25) (undo-tree-id1006 . 25) (undo-tree-id1007 . 25) (undo-tree-id1008 . 25) (undo-tree-id1009 . 25) (undo-tree-id1010 . 25) (undo-tree-id1011 . 25) (undo-tree-id1012 . 25) (undo-tree-id1013 . 25) (undo-tree-id1014 . 25) (undo-tree-id1015 . 25) (undo-tree-id1016 . 25) (undo-tree-id1017 . -25)) nil (26032 28253 970376 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15855) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . 1) (undo-tree-id971 . 1) (undo-tree-id972 . 1) (undo-tree-id973 . 1) (undo-tree-id974 . 1) (undo-tree-id975 . 1) (undo-tree-id976 . 1) (undo-tree-id977 . 1) (undo-tree-id978 . 1) (undo-tree-id979 . 1) (undo-tree-id980 . 1) (undo-tree-id981 . 1) (undo-tree-id982 . 1) (undo-tree-id983 . 1) (undo-tree-id984 . 1) (undo-tree-id985 . 1) (undo-tree-id986 . 1) (undo-tree-id987 . 1) (undo-tree-id988 . 1) (undo-tree-id989 . 1) (undo-tree-id990 . 1) (undo-tree-id991 . 1) (undo-tree-id992 . 1) (undo-tree-id993 . 1)) nil (26032 28253 970367 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15855) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . 1) (undo-tree-id933 . 1) (undo-tree-id934 . 1) (undo-tree-id935 . 1) (undo-tree-id936 . 1) (undo-tree-id937 . 1) (undo-tree-id938 . 1) (undo-tree-id939 . 1) (undo-tree-id940 . 1) (undo-tree-id941 . 1) (undo-tree-id942 . 1) (undo-tree-id943 . 1) (undo-tree-id944 . 1) (undo-tree-id945 . 1) (undo-tree-id946 . 1) (undo-tree-id947 . 1) (undo-tree-id948 . 1) (undo-tree-id949 . 1) (undo-tree-id950 . 1) (undo-tree-id951 . 1) (undo-tree-id952 . 1) (undo-tree-id953 . 1) (undo-tree-id954 . 1) (undo-tree-id955 . 1) (undo-tree-id956 . 1)) nil (26032 28253 970352 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15855) (undo-tree-id879 . 1) (undo-tree-id880 . 1) (undo-tree-id881 . 1) (undo-tree-id882 . 1) (undo-tree-id883 . 1) (undo-tree-id884 . 1) (undo-tree-id885 . 1) (undo-tree-id886 . 1) (undo-tree-id887 . 1) (undo-tree-id888 . 1) (undo-tree-id889 . 1) (undo-tree-id890 . 1) (undo-tree-id891 . 1) (undo-tree-id892 . 1) (undo-tree-id893 . 1) (undo-tree-id894 . 1) (undo-tree-id895 . 1) (undo-tree-id896 . 1) (undo-tree-id897 . 1) (undo-tree-id898 . 1) (undo-tree-id899 . 1) (undo-tree-id900 . 1) (undo-tree-id901 . 1) (undo-tree-id902 . 1) (undo-tree-id903 . 1) (undo-tree-id904 . 1) (undo-tree-id905 . 1)) nil (26032 28253 970329 0) 0 nil])
([nil nil ((16272 . 16273) 15855) nil (26032 28253 970310 0) 0 nil])
([nil nil ((14986 . 14994) (#("         " 0 9 (fontified t)) . -14986) (#("*" 0 1 (face font-lock-keyword-face fontified t)) . -14921) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) 14922 (t 26032 28253 973508 25000)) nil (26032 28303 7609 0) 0 nil])
([nil nil ((9896 . 9898) (t 26032 28303 10675 856000)) nil (26032 28483 864488 0) 0 nil])
([nil nil ((9898 . 9903)) nil (26032 28483 864488 0) 0 nil])
([nil nil ((9903 . 9904)) nil (26032 28483 864488 0) 0 nil])
([nil nil ((9904 . 9906)) nil (26032 28483 864487 0) 0 nil])
([nil nil ((9906 . 9907)) nil (26032 28483 864487 0) 0 nil])
([nil nil ((9907 . 9914)) nil (26032 28483 864487 0) 0 nil])
([nil nil ((9914 . 9915)) nil (26032 28483 864486 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -9915) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) 9916) nil (26032 28483 864485 0) 0 nil])
([nil current ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 9914) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) 9915) nil (26032 28483 864466 0) 0 nil])
nil
